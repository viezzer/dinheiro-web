{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eduvi\\\\Documents\\\\GitHubProjects\\\\dinheiro-web\\\\src\\\\components\\\\NewTransactionForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Switch from './SwitchDemo';\nimport styles from './NewTransactionForm.module.css';\nimport Input from './form/Input';\nimport Select from './form/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NewTransactionForm() {\n  _s();\n  const [isIncome, setIsIncome] = useState(true);\n  const [title, setTitle] = useState('');\n  const [amount, setAmount] = useState('');\n  const [date, setDate] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [categorieId, setCategorieId] = useState('');\n  const [titlePlaceholder, setTitlePlaceholder] = useState('Salário, Serviço Prestado, etc...');\n  const fetchCategories = () => {\n    fetch(\"http://localhost:5000/categories\", {\n      metohd: \"GET\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      setCategories(data);\n    }).catch(err => console.log(err));\n  };\n  function handleCreateNewTransaction(e) {\n    e.preventDefault();\n    if (categorieId === \"\") {\n      alert(\"Preencha todos os campos e selecione uma categoria!\");\n      return false;\n    } else {\n      if (title.trim().length < 3) {\n        alert(\"Preencha o campo 'Nome' com pelo menos 3 caracteres\");\n        return false;\n      } else {\n        if (toFloat(amount) === 0) {\n          alert(\"Digite um 'Valor' para a transação\");\n          return false;\n        }\n      }\n    }\n  }\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Nova transa\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      onSubmit: handleCreateNewTransaction,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: styles.label,\n        children: \"Tipo da transa\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.switchDiv,\n        children: [/*#__PURE__*/_jsxDEV(Switch, {\n          setIsIncome: setIsIncome,\n          setTitlePlaceholder: setTitlePlaceholder,\n          isIncome: isIncome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: styles.smallInfo,\n          children: \"Receita para valor que entrou na sua conta. Despesa para valor que saiu da sua conta. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        name: \"categorie\",\n        text: \"Selecione uma categoria\",\n        options: categories,\n        handleOnChange: e => setCategorieId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"title\",\n        text: \"Nome\",\n        type: \"text\",\n        placeholder: titlePlaceholder,\n        handleOnChange: e => setTitle(e.target.value),\n        value: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"amount\",\n        text: \"Valor\",\n        type: \"number\",\n        placeholder: \"0.00\",\n        handleOnChange: e => setAmount(e.target.value),\n        value: amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"date\",\n        text: \"Data da transa\\xE7\\xE3o\",\n        type: \"date\",\n        handleOnChange: e => setDate(e.target.value),\n        value: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.inputSubmit,\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(NewTransactionForm, \"Ddhuhdzxn9pdQDv1+3sTvkAtjTY=\");\n_c = NewTransactionForm;\nexport default NewTransactionForm;\nvar _c;\n$RefreshReg$(_c, \"NewTransactionForm\");","map":{"version":3,"names":["useState","useEffect","Switch","styles","Input","Select","jsxDEV","_jsxDEV","Fragment","_Fragment","NewTransactionForm","_s","isIncome","setIsIncome","title","setTitle","amount","setAmount","date","setDate","categories","setCategories","categorieId","setCategorieId","titlePlaceholder","setTitlePlaceholder","fetchCategories","fetch","metohd","headers","then","response","json","data","catch","err","console","log","handleCreateNewTransaction","e","preventDefault","alert","trim","length","toFloat","children","fileName","_jsxFileName","lineNumber","columnNumber","className","form","onSubmit","label","switchDiv","smallInfo","name","text","options","handleOnChange","target","value","type","placeholder","inputSubmit","_c","$RefreshReg$"],"sources":["C:/Users/eduvi/Documents/GitHubProjects/dinheiro-web/src/components/NewTransactionForm.js"],"sourcesContent":["import {useState, useEffect} from 'react'\r\nimport Switch from './SwitchDemo';\r\nimport styles from './NewTransactionForm.module.css';\r\nimport Input from './form/Input'\r\nimport Select from './form/Select'\r\n\r\nfunction NewTransactionForm() {\r\n    const [isIncome, setIsIncome] = useState(true) \r\n    const [title, setTitle] = useState('')\r\n    const [amount, setAmount] = useState('')\r\n    const [date, setDate] = useState('')\r\n    const [categories, setCategories] = useState([])\r\n    const [categorieId, setCategorieId] = useState('')\r\n    const [titlePlaceholder, setTitlePlaceholder] = useState('Salário, Serviço Prestado, etc...')\r\n\r\n    const fetchCategories = () => {\r\n        fetch(\"http://localhost:5000/categories\", {\r\n            metohd: \"GET\",\r\n            headers: {'Content-Type': 'application/json'}\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            setCategories(data)\r\n        })\r\n        .catch((err) => console.log(err))\r\n    }\r\n\r\n    function handleCreateNewTransaction(e) {\r\n        e.preventDefault()\r\n        if(categorieId === \"\") {\r\n            alert(\"Preencha todos os campos e selecione uma categoria!\")\r\n            return false\r\n        } else {\r\n            if(title.trim().length<3) {\r\n                alert(\"Preencha o campo 'Nome' com pelo menos 3 caracteres\")\r\n                return false\r\n            } else {\r\n                if(toFloat(amount) === 0) {\r\n                    alert(\"Digite um 'Valor' para a transação\")\r\n                    return false\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCategories();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h2>Nova transação</h2>\r\n            <form className={styles.form} onSubmit={handleCreateNewTransaction}>\r\n                <label className={styles.label}>Tipo da transação</label>\r\n                <div className={styles.switchDiv}>\r\n                    <Switch \r\n                        setIsIncome={setIsIncome} \r\n                        setTitlePlaceholder={setTitlePlaceholder} \r\n                        isIncome={isIncome}\r\n                    />\r\n                    <small className={styles.smallInfo}>Receita para valor que entrou na sua conta. Despesa para valor que saiu da sua conta. </small>\r\n                </div>\r\n                \r\n                <Select \r\n                    name=\"categorie\"\r\n                    text=\"Selecione uma categoria\"\r\n                    options={categories}\r\n                    handleOnChange={(e) => setCategorieId(e.target.value)}\r\n                />\r\n\r\n                <Input \r\n                    name=\"title\"\r\n                    text=\"Nome\"\r\n                    type=\"text\"\r\n                    placeholder={titlePlaceholder}\r\n                    handleOnChange={(e) => setTitle(e.target.value)}\r\n                    value={title}\r\n                />\r\n                <Input\r\n                    name=\"amount\"\r\n                    text=\"Valor\"\r\n                    type=\"number\"\r\n                    placeholder=\"0.00\"\r\n                    handleOnChange={(e) => setAmount(e.target.value)}\r\n                    value={amount}\r\n                />\r\n\r\n                <Input\r\n                    name=\"date\"\r\n                    text=\"Data da transação\"\r\n                    type=\"date\"\r\n                    handleOnChange={(e) => setDate(e.target.value)}\r\n                    value={date}\r\n                />\r\n                <input className={styles.inputSubmit} type='submit'></input>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewTransactionForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}